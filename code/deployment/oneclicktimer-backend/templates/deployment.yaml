apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oneclicktimer-backend.fullname" . }}
  labels:
    {{- include "oneclicktimer-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "oneclicktimer-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oneclicktimer-backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oneclicktimer-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-db
          image: monasca/mysql-init:1.5.5
          command: 
            - 'sh'
            - '-c'
            - 'until mysql --protocol TCP -u"$MYSQL_USER" -p"$MYSQL_PASSWORD" -h "oneclicktimer-backend-mysql" -e "show databases;"; do echo waiting for db; sleep 2; done;'
          envFrom:
            - secretRef:
                name: {{ .Values.db.secretName }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # TODO: template values
          env:
            - name: spring_datasource_url
              value: jdbc:mysql://oneclicktimer-backend-mysql:3306/oneclicktimer
            - name: spring_datasource_driver-class-name
              value: com.mysql.cj.jdbc.Driver
            - name: spring_jpa_database-platform
              value: org.hibernate.dialect.MySQL8Dialect
            - name: spring_jpa_hibernate_ddl-auto
              value: update
            - name: spring_datasource_username
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: MYSQL_USER
            - name: spring_datasource_password
              valueFrom: 
                secretKeyRef:
                  name: {{ .Values.db.secretName }}
                  key: mysql-password
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
